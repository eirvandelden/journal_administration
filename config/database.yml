# As with config/credentials.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password as a unix environment variable when you boot
# the app. Read https://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full rundown on how to provide these environment variables in a
# production deployment.
#
# On Heroku and other platform providers, you may have a full connection URL
# available as an environment variable. For example:
#
#   DATABASE_URL="postgres://myuser:mypass@localhost/somedatabase"
#
# You can use this database configuration with:
#
#   production:
#     url: <%= ENV['DATABASE_URL'] %>
#
# production:
#   <<: default
#   # URL: <%= ENV['JOURNAL_ADMINISTRATION_DB_URL'] %>
#   database: storage/production.sqlite3
#
#
# # SQLite. Versions 3.8.0 and up are supported.
# PostgreSQL. Versions 9.3 and up are supported.
#
#   #   gem install sqlite3
#   #
#   #   Ensure the SQLite 3 gem is defined in your Gemfile
#   #   gem "sqlite3"
#   #
default: &default
  # adapter: postgresql
  adapter: sqlite3
  encoding: unicode
  # For details on connection pooling, see Rails configuration guide
  # https://guides.rubyonrails.org/configuring.html#database-pooling
  pool: <%= ENV['RAILS_MAX_THREADS'] || 5 %>
  host: <%= ENV['DOCKER_DB_HOST'] || 'localhost' %>
  port: <%= ENV['DOCKER_DB_PORT'] || 5432 %>
  timeout: 100
  default_transaction_mode: immediate

development:
  <<: *default
  database: storage/db/development.sqlite3
  # database: journal_administration

#
#   # Warning: The database defined as "test" will be erased and
#   # re-generated from your development database when you run "rake".
#   # Do not set this db to the same as development or production.
test:
  <<: *default
  # database: storage/test.sqlite3
  database: storage/db/test.sqlite3

production:
  <<: *default
  database: storage/db/production.sqlite3
